/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import java.awt.Component;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;

/**
 *
 * @author User
 */
public class DashBoard extends javax.swing.JFrame {

    /**
     * Creates new form DashBoard
     */
    public DashBoard() {
        initComponents();
        setTitle("Dashboard");
        setSize(1024, 683);
    }
    
    int[] TRABAJADORES = new int [6];
    
    public void GuardarTotalEmpleados(){
        int NumeroTrabajadoresDisenadorEscenarios = (int) DisenadorEscenarios.getValue();
        JOptionPane.showMessageDialog(rootPane, "Tienes: "+ NumeroTrabajadoresDisenadorEscenarios);
        
    
}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CartoonNetworkBoton = new javax.swing.JButton();
        DisneyChanelBoton = new javax.swing.JButton();
        Guardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        AnimadorPersonajes = new javax.swing.JSpinner();
        ActoresDoblaje = new javax.swing.JSpinner();
        GuionistaPlotTwist = new javax.swing.JSpinner();
        Ensambladores = new javax.swing.JSpinner();
        ProjectManager = new javax.swing.JSpinner();
        Guionistas = new javax.swing.JSpinner();
        DisenadorEscenarios = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        Director1 = new javax.swing.JSpinner();
        CorrerBoton = new javax.swing.JButton();
        TOTAL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        CartoonNetworkBoton.setText("Cartoon Network");
        CartoonNetworkBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CartoonNetworkBotonActionPerformed(evt);
            }
        });
        getContentPane().add(CartoonNetworkBoton);
        CartoonNetworkBoton.setBounds(10, 10, 150, 23);

        DisneyChanelBoton.setText("Disney Channel");
        DisneyChanelBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisneyChanelBotonActionPerformed(evt);
            }
        });
        getContentPane().add(DisneyChanelBoton);
        DisneyChanelBoton.setBounds(790, 20, 180, 23);

        Guardar.setText("Guardar Archivo");
        getContentPane().add(Guardar);
        Guardar.setBounds(380, 90, 160, 23);

        jLabel1.setText("Empleados en Cartoon Network:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 120, 220, 16);

        jLabel2.setText("Animador de personajes");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 180, 160, 16);

        jLabel3.setText("Actores de doblaje");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 210, 130, 16);

        jLabel4.setText("Guionista de PlotTwist");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(20, 240, 160, 16);

        jLabel5.setText("Ensambladores");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 270, 120, 16);

        jLabel6.setText("Project Manager");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 300, 110, 16);

        jLabel7.setText("Director");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 330, 120, 16);

        jLabel9.setText("Guionistas");
        jLabel9.setToolTipText("");
        jLabel9.setName(""); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(20, 360, 160, 20);

        AnimadorPersonajes.setValue(1);
        AnimadorPersonajes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                AnimadorPersonajesStateChanged(evt);
            }
        });
        getContentPane().add(AnimadorPersonajes);
        AnimadorPersonajes.setBounds(180, 180, 64, 22);

        ActoresDoblaje.setValue(1);
        ActoresDoblaje.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ActoresDoblajeStateChanged(evt);
            }
        });
        getContentPane().add(ActoresDoblaje);
        ActoresDoblaje.setBounds(180, 210, 64, 22);

        GuionistaPlotTwist.setValue(1);
        GuionistaPlotTwist.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                GuionistaPlotTwistStateChanged(evt);
            }
        });
        getContentPane().add(GuionistaPlotTwist);
        GuionistaPlotTwist.setBounds(180, 240, 64, 22);

        Ensambladores.setValue(1);
        Ensambladores.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                EnsambladoresStateChanged(evt);
            }
        });
        getContentPane().add(Ensambladores);
        Ensambladores.setBounds(180, 270, 64, 22);

        ProjectManager.setValue(1);
        ProjectManager.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ProjectManagerStateChanged(evt);
            }
        });
        getContentPane().add(ProjectManager);
        ProjectManager.setBounds(180, 300, 64, 22);

        Guionistas.setValue(1);
        Guionistas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                GuionistasStateChanged(evt);
            }
        });
        getContentPane().add(Guionistas);
        Guionistas.setBounds(180, 360, 64, 22);

        DisenadorEscenarios.setValue(1);
        DisenadorEscenarios.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                DisenadorEscenariosStateChanged(evt);
            }
        });
        getContentPane().add(DisenadorEscenarios);
        DisenadorEscenarios.setBounds(180, 150, 64, 22);

        jLabel10.setText("Diseñador de escenarios");
        jLabel10.setToolTipText("");
        jLabel10.setName(""); // NOI18N
        getContentPane().add(jLabel10);
        jLabel10.setBounds(20, 150, 160, 20);

        Director1.setValue(1);
        Director1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Director1StateChanged(evt);
            }
        });
        getContentPane().add(Director1);
        Director1.setBounds(180, 330, 64, 20);

        CorrerBoton.setText("Correr");
        CorrerBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorrerBotonActionPerformed(evt);
            }
        });
        getContentPane().add(CorrerBoton);
        CorrerBoton.setBounds(370, 410, 130, 23);
        getContentPane().add(TOTAL);
        TOTAL.setBounds(550, 260, 120, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CartoonNetworkBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CartoonNetworkBotonActionPerformed
        // TODO add your handling code here:
        CartoonNetwork CN = new CartoonNetwork();
        dispose();
        CN.setLocationRelativeTo(null);
        CN.setVisible(true);
        
    }//GEN-LAST:event_CartoonNetworkBotonActionPerformed

    private void DisenadorEscenariosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_DisenadorEscenariosStateChanged
        // TODO add your handling code here:
        int valorActual = (int) DisenadorEscenarios.getValue();
        if (valorActual == 0){
            JOptionPane.showMessageDialog(rootPane, "Cada estudio de animación debe contar en todo momento con un " + "trabajador de cada tipo como mínimo ");
            DisenadorEscenarios.setValue(1);
        }
    }//GEN-LAST:event_DisenadorEscenariosStateChanged

    private void AnimadorPersonajesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_AnimadorPersonajesStateChanged
        // TODO add your handling code here:
        int valorActual = (int) AnimadorPersonajes.getValue();
        if (valorActual == 0){
            JOptionPane.showMessageDialog(rootPane, "Cada estudio de animación debe contar en todo momento con un " + "trabajador de cada tipo como mínimo ");
            AnimadorPersonajes.setValue(1);
        }
    }//GEN-LAST:event_AnimadorPersonajesStateChanged

    private void ActoresDoblajeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ActoresDoblajeStateChanged
        // TODO add your handling code here:
        int valorActual = (int) ActoresDoblaje.getValue();
        if (valorActual == 0){
            JOptionPane.showMessageDialog(rootPane, "Cada estudio de animación debe contar en todo momento con un " + "trabajador de cada tipo como mínimo ");
            ActoresDoblaje.setValue(1);
        }
    }//GEN-LAST:event_ActoresDoblajeStateChanged

    private void GuionistaPlotTwistStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_GuionistaPlotTwistStateChanged
        // TODO add your handling code here:
        int valorActual = (int) GuionistaPlotTwist.getValue();
        if (valorActual == 0){
            JOptionPane.showMessageDialog(rootPane, "Cada estudio de animación debe contar en todo momento con un " + "trabajador de cada tipo como mínimo ");
            GuionistaPlotTwist.setValue(1);
        }
    }//GEN-LAST:event_GuionistaPlotTwistStateChanged

    private void EnsambladoresStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_EnsambladoresStateChanged
        // TODO add your handling code here:
        int valorActual = (int) Ensambladores.getValue();
        if (valorActual == 0){
            JOptionPane.showMessageDialog(rootPane, "Cada estudio de animación debe contar en todo momento con un " + "trabajador de cada tipo como mínimo ");
            Ensambladores.setValue(1);
        }
    }//GEN-LAST:event_EnsambladoresStateChanged

    private void ProjectManagerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ProjectManagerStateChanged
        // TODO add your handling code here:
        int valorActual = (int) ProjectManager.getValue();
        if (valorActual == 0){
            JOptionPane.showMessageDialog(rootPane, "Cada estudio de animación debe contar en todo momento con un " + "trabajador de cada tipo como mínimo ");
            ProjectManager.setValue(1);
        }
    }//GEN-LAST:event_ProjectManagerStateChanged

    private void GuionistasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_GuionistasStateChanged
        // TODO add your handling code here:
        int valorActual = (int) Guionistas.getValue();
        if (valorActual == 0){
            JOptionPane.showMessageDialog(rootPane, "Cada estudio de animación debe contar en todo momento con un " + "trabajador de cada tipo como mínimo ");
            Guionistas.setValue(1);
        }
    }//GEN-LAST:event_GuionistasStateChanged

    private void Director1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Director1StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_Director1StateChanged

    private void CorrerBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorrerBotonActionPerformed
        // TODO add your handling code here:
        int NumeroTrabajadoresDisenadorEscenarios = (int) DisenadorEscenarios.getValue();
        
        int NumeroTrabajadoresAnimadorPersonajes = (int) AnimadorPersonajes.getValue();
        
        int NumeroActoresDoblaje = (int) ActoresDoblaje.getValue();
        
        int NumeroGuionistaPlotTwist = (int) GuionistaPlotTwist.getValue();
        
        int NumeroEnsambladores = (int) Ensambladores.getValue();
        
        int NumeroProjectManager = (int) ProjectManager.getValue();
        
        int NumeroDirector1 = (int) Director1.getValue();
        
        int NumeroGuionistas = (int) Guionistas.getValue();
        
        int[] valores = {
            NumeroTrabajadoresDisenadorEscenarios,
            NumeroTrabajadoresAnimadorPersonajes,
            NumeroActoresDoblaje,
            NumeroGuionistaPlotTwist,
            NumeroEnsambladores,
            NumeroProjectManager,
            NumeroDirector1,
            NumeroGuionistas
        };

        // Sumar los valores en el array usando un bucle
        int suma = 0;
        for (int valor : valores) {
            suma += valor;
        }
        
        //Ver el total de la suma:
        //JOptionPane.showMessageDialog(rootPane, "La suma total es: " + suma);
        
        if (suma > 13){
            JOptionPane.showMessageDialog(rootPane, "No puden haber mas de 13 trabajadores");
        }else{
            JOptionPane.showMessageDialog(rootPane, "En marcha !");
        }
        
    
    }//GEN-LAST:event_CorrerBotonActionPerformed

    private void DisneyChanelBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisneyChanelBotonActionPerformed
        // TODO add your handling code here:
        DisneyChannel DC = new DisneyChannel();
        dispose();
        DC.setLocationRelativeTo(null);
        DC.setVisible(true);
    }//GEN-LAST:event_DisneyChanelBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashBoard().setVisible(true);
            }
        });
    }
    
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner ActoresDoblaje;
    private javax.swing.JSpinner AnimadorPersonajes;
    private javax.swing.JButton CartoonNetworkBoton;
    private javax.swing.JButton CorrerBoton;
    private javax.swing.JSpinner Director1;
    private javax.swing.JSpinner DisenadorEscenarios;
    private javax.swing.JButton DisneyChanelBoton;
    private javax.swing.JSpinner Ensambladores;
    private javax.swing.JButton Guardar;
    private javax.swing.JSpinner GuionistaPlotTwist;
    private javax.swing.JSpinner Guionistas;
    private javax.swing.JSpinner ProjectManager;
    private javax.swing.JLabel TOTAL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
